const axios = require("axios");
const { OLLAMA_API_GENERATE, WEATHER_API_URL } = require("../utils/constants");

async function getWeatherDate(city = '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥') {
  try {
    const response = await axios.get(WEATHER_API_URL, {
      params: {
        q: city,
        days: 1,
        lang: 'ru',
        key: process.env.WEATHER_API_KEY
      }
    })

    const result = response.data;

    if (!result.forecast.forecastday[0].date) {
      throw new Error('–û—à–∏–±–∫–∞, result: ', result);
    }

    const date = result.forecast.forecastday[0].date; // –¥–∞—Ç–∞ –ø—Ä–æ–≥–Ω–æ–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥-–º–µ—Å—è—Ü-–¥–µ–Ω—å, –Ω–∞–ø—Ä–∏–º–µ—Ä "2025-04-08"

    const forecastDay = result.forecast.forecastday[0].day;
    const maxTemp = Math.round(forecastDay.maxtemp_c); // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å
    const minTemp = Math.round(forecastDay.mintemp_c); // –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å
    const maxWind = Math.round(forecastDay.maxwind_kph); // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
    const chanceOfRain = forecastDay.daily_chance_of_rain; // —à–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –¥–æ–∂–¥—å, –Ω–∞–ø—Ä–∏–º–µ—Ä 73
    const chanceOfSnow = forecastDay.daily_chance_of_snow; // —à–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç —Å–Ω–µ–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä 90
    const weatherReport = forecastDay.condition.text; // –æ—Ü–µ–Ω–∫–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–µ–Ω—å, –Ω–∞–ø—Ä–∏–º–µ—Ä –°–æ–ª–Ω–µ—á–Ω–æ

    const astro = result.forecast.forecastday[0].astro;
    const sunrise = astro.sunrise; // –≤–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞
    const sunset = astro.sunset; // –∑–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞
    const moonrise = astro.moonrise; // –≤–æ—Å—Ö–æ–¥ –ª—É–Ω—ã
    const moonset = astro.moonset; // –∑–∞–∫–∞—Ç –ª—É–Ω—ã

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –∫–∞–∂–¥—ã–π —á–∞—Å
    const hours = result.forecast.forecastday[0].hour;
    const hourlyWeatherReports = hours.map((hour) => ({
      time: hour.time,
      weatherReport: hour.condition.text
    }));

    return {
      date,

      maxTemp,
      minTemp,
      maxWind,
      chanceOfRain,
      chanceOfSnow,
      weatherReport,

      sunrise,
      sunset,
      moonrise,
      moonset,

      hourlyWeatherReports
    }
  } catch (error) {
    console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã: ', error.message);
  }
}

async function generateWeatherReport(city = '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥') {
  const {
    date,

    maxTemp,
    minTemp,
    maxWind,
    chanceOfRain,
    chanceOfSnow,
    weatherReport,

    sunrise,
    sunset,
    moonrise,
    moonset,

    hourlyWeatherReports
  } = await getWeatherDate(city);

  try {
    const response = await axios.post(OLLAMA_API_GENERATE, {
      model: 'llama3',
      prompt: `
      –ü–ò–®–ò –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï.
      –¢—ã —Å–∞–º—ã–π –ª—É—á—à–∏–π –≤–µ–¥—É—â–∏–π –†–£–°–°–ö–û–ô –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–µ–Ω—å.
      –û—Ç–ø—Ä–∞–≤—å —Å–ª–µ–¥—É—é—â–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –≤ –≥–æ—Ä–æ–¥–µ ${city}, –∏—Å—Ö–æ–¥—è –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö:
      ${date}: –î–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –≥–æ–¥-–º–µ—Å—è—Ü-–¥–µ–Ω—å, –Ω–∞–ø—Ä–∏–º–µ—Ä 2025-04-08 —ç—Ç–æ 8 –∞–ø—Ä–µ–ª—è 2025 –≥–æ–¥–∞,
      ${maxTemp}: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å
      ${minTemp}: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –∑–∞ –¥–µ–Ω—å
      ${maxWind}: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
      ${chanceOfRain}: —à–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç –¥–æ–∂–¥—å, –Ω–∞–ø—Ä–∏–º–µ—Ä 73
      ${chanceOfSnow}: —à–∞–Ω—Å —Ç–æ–≥–æ, —á—Ç–æ –±—É–¥–µ—Ç —Å–Ω–µ–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä 90
      ${weatherReport}: –æ—Ü–µ–Ω–∫–∞ –ø–æ–≥–æ–¥—ã –Ω–∞ –¥–µ–Ω—å, –Ω–∞–ø—Ä–∏–º–µ—Ä –°–æ–ª–Ω–µ—á–Ω–æ
      ${sunrise}: –≤–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞
      ${sunset}: –∑–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞
      ${moonrise}: –≤–æ—Å—Ö–æ–¥ –ª—É–Ω—ã
      ${moonset}: –∑–∞–∫–∞—Ç –ª—É–Ω—ã

      –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ –∫–∞–∂–¥—ã–π —á–∞—Å, —á—Ç–æ–±—ã —Å–æ–æ–±—â–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, –∫–∞–∫ –ø—Ä–∏–º–µ—Ä–Ω–æ –±—É–¥–µ—Ç –º–µ–Ω—è—Ç—å –ø–æ–≥–æ–¥–∞, –µ—Å–ª–∏ –±—É–¥–µ—Ç:
      ${hourlyWeatherReports}

      –ü–µ—Ä–µ–≤–µ–¥–∏ 12-—Ç–∏ —á–∞—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç (AM/PM) –≤ 24-—á–∞—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç, —Ç–æ –µ—Å—Ç—å –≤–º–µ—Å—Ç–æ 8PM –±—É–¥–µ—Ç 20:00, 7PM –±—É–¥–µ—Ç 19:00 –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ.
      –¢–∞–∫–∂–µ –¥–æ–±–∞–≤—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–∞—Ä—É –∫–æ–∫–µ—Ç–ª–∏–≤—ã—Ö —à—É—Ç–æ–∫ 18+.

      –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –µ—Å—Ç—å —ç–º–æ–¥–∑–∏, –∏ —á—Ç–æ —à—É—Ç–∫–∏ –Ω–µ —Å–ª–∏—à–∫–æ–º –Ω–∞—Å—Ç–æ–π—á–∏–≤—ã–µ, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∏–≥—Ä–∏–≤—ã–π –∏ –ª–µ–≥–∫–∏–π —Ç–æ–Ω.

      –£–ë–ï–î–ò–°–¨, –ß–¢–û –¢–í–û–ï –°–û–û–©–ï–ù–ò–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–ï–¢ –î–ê–ù–ù–´–ú –ò–ó –¢–ó.
      –£–ë–ï–î–ò–°–¨, –ß–¢–û –¢–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï!`,
      stream: false,
      options: {
        temperature: 0.9,
        max_tokens: 150,
        top_p: 0.9,
        frequency_penalty: 0.5,
        presence_penalty: 0.5,
      },
    });

    const result = response.data;

    if (!result.response) {
      throw new Error('–•—É–µ–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã, –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞', result);
    }

    return result.response.trim();
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã: ", error.message);
    return `–•—É–µ–≤—ã–π –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã üçÜüçÜüçÜ 
–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç AI.
–û–¥–µ–≤–∞–π—Ç–µ—Å—å –∫–∞–∫ –ø–æ –∫–∞–π—Ñ—É!üí©üí©üí©`;
  }
}

module.exports = {
  generateWeatherReport
}