const axios = require("axios");

const { 
  MONKEY_SEARCH_THEMES, 
  FUNNY_DESCRIPTIONS, 
  TOGETHER_API_URL, 
} = require("../utils/constants");
const { randomizer } = require("../utils/helpers");

async function getRandomMonkeyGif() {
  try {
    const url = await getRandomGifUrl();
    const description = await generateGifDescription();

    return {
      url,
      description
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–∏—Ñ–∫–∏:', error);
    return {
      url: 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHExNHY2OGdub2hxbXAyM3VlZjE0cDhydXBoOGZzaW8ydnN3cDFzcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MbAKIY1bYnNoo27eWf/giphy.gif',
      description: '–≠–º–º–º... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ :('
    };
  }
}

async function getRandomGifUrl() {
  try {
    const response = await axios.get('https://tenor.googleapis.com/v2/search', {
      params: {
        key: process.env.TENOR_API_KEY,
        q: randomizer(MONKEY_SEARCH_THEMES),
        limit: 50,
        media_filter: 'minimal'
      },
      timeout: 5000
    });

    const gifs = response.data.results.map(gif => ({
      url: gif.media_formats.gif.url
    }));

    if (!gifs.length) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö GIFs: ', gifs)
    }

    const result = randomizer(gifs);

    return result.url
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL –≥–∏—Ñ–∫–∏:', error);
    return 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHExNHY2OGdub2hxbXAyM3VlZjE0cDhydXBoOGZzaW8ydnN3cDFzcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MbAKIY1bYnNoo27eWf/giphy.gif'
  }
}

async function generateGifDescription(gifUrl) {
  try {
    const strictPrompt = `
      –û–¢–í–ï–¢–¨ –û–î–ù–ò–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –ë–ï–ó –†–ê–°–°–£–ñ–î–ï–ù–ò–ô.
      –ü—Ä–∏–¥—É–º–∞–π —Å–º–µ—à–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø–∏—Å–∞–Ω–∏—è –º–µ–º–µ–Ω–æ–π/—Å–º–µ—à–Ω–æ–π –≥–∏—Ñ–∫–∏ –ø–æ url: ${gifUrl}.

      –í —Å–ª–µ–¥—é—â–µ–º —Ñ–æ—Ä–º–∞—Ç–µ:
      –°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë–∏–±–∏–∑—è–Ω-—Ç–∏–ø** ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏
        –ì–¥–µ: 
        - —Ç–∏–ø=1 —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ
        - –æ–ø–∏—Å–∞–Ω–∏–µ=6-8 —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤
        - 1 —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Ü–µ

      –ü—Ä–∏–º–µ—Ä—ã:
      "–°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë–∏–±–∏–∑—è–Ω-—Å–æ–Ω—è** ‚Äî —É–∂–µ –ø—è—Ç—ã–π —Ä–∞–∑ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å —ç—Ç—É –≥–∏—Ñ–∫—É üí§",
      "–°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë—É–±–Ω–µ–∑–Ω—ã–π –±–∏–±–∏–∑—è–Ω** ‚Äî –Ω–µ—Å–µ—à—å —á—É—à—å, –Ω–æ –∑–≤—É—á–∏—Ç —ç–ø–∏—á–Ω–æ üé§", 
      "–°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë–∏–±–∏–∑—è–Ω-–∑—É–º–µ—Ä** ‚Äî —Ä–∞–±–æ—Ç–∞–µ—à—å 5 –º–∏–Ω—É—Ç, —É—Å—Ç–∞–ª –Ω–∞ 5 —á–∞—Å–æ–≤ üì±"

      –ü–†–ò–ú–ï–†–´ –ù–ï –ò–°–ü–û–õ–¨–ó–£–ô –í –§–ò–ù–ê–õ–¨–ù–û–ú –û–¢–í–ï–¢–ï.

      –¢–µ–º—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ä–∞–∑–Ω—ã–º–∏:
        - –°–æ—Å—Ç–æ—è–Ω–∏—è —É—Å—Ç–∞–ª–æ—Å—Ç–∏
        - –†–∞–±–æ—Ç–∞/—É—á–µ–±–∞
        - –≠–º–æ—Ü–∏–∏/–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        - –°–∏—Ç—É–∞—Ç–∏–≤–Ω—ã–µ
        - –ê–±—Å—É—Ä–¥–Ω—ã–µ
        - –ò–Ω—Ç–µ—Ä–Ω–µ—Ç/–º–µ–º—ã
        - –ë—ã—Ç–æ–≤—É—Ö–∞
      –û–¢–í–ï–¢–¨ –û–î–ù–ò–ú –°–û–û–ë–©–ï–ù–ò–ï–ú –ë–ï–ó –†–ê–°–°–£–ñ–î–ï–ù–ò–ô.
    `

    const response = await axios.post(
      TOGETHER_API_URL,
      {
        model: "deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free",
        messages: [{ role: "user", content: strictPrompt }],
        temperature: 0.9,
        max_tokens: 800
      },
      {
        headers: {
          "Authorization": `Bearer ${process.env.TOGETHER_API_KEY}`,
          "Content-Type": "application/json"
        }
      }
    );


    if (!response.data?.choices?.[0]?.message?.content) {
      throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç API');
    }

    const result = response.data.choices[0].message.content
      .replace(/<think>.*<\/think>/gs, '')
      .replace(/^[^–∞-—è–ê-–Ø]*/, '')
      .trim();

    if (!result.includes('–°–µ–≥–æ–¥–Ω—è —Ç—ã:')) {
      throw new Error(`–§–æ—Ä–º–∞—Ç –Ω–∞—Ä—É—à–µ–Ω: ${result}`);
    }

    return result;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥–∏—Ñ–∫–∏ —Å –±–∏–±–∏–∑—è–Ω–æ–º:', error.message);
    return randomizer(FUNNY_DESCRIPTIONS);
  }
}

module.exports = {
  getRandomMonkeyGif
}