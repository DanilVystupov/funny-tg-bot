const axios = require("axios");

const { MONKEY_SEARCH_THEMES, FUNNY_DESCRIPTIONS } = require("../utils/constants");
const { randomizer } = require("../utils/helpers");

async function getRandomMonkeyGif() {
  try {
    const url = await getRandomGifUrl();
    const description = await generateGifDescription();

    return {
      url,
      description
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥–∏—Ñ–∫–∏:', error);
    return {
      url: 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHExNHY2OGdub2hxbXAyM3VlZjE0cDhydXBoOGZzaW8ydnN3cDFzcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MbAKIY1bYnNoo27eWf/giphy.gif',
      description: '–≠–º–º–º... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ :('
    };
  }
}

async function getRandomGifUrl() {
  try {
    const response = await axios.get('https://tenor.googleapis.com/v2/search', {
      params: {
        key: process.env.TENOR_API_KEY,
        q: randomizer(MONKEY_SEARCH_THEMES),
        limit: 100,
        media_filter: 'minimal'
      },
      timeout: 5000
    });

    const gifs = response.data.results.map(gif => ({
      url: gif.media_formats.gif.url
    }));

    if (!gifs.length) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö GIFs: ', gifs)
    }

    const result = randomizer(gifs);

    return result.url
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ URL –≥–∏—Ñ–∫–∏:', error);
    return 'https://media1.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHExNHY2OGdub2hxbXAyM3VlZjE0cDhydXBoOGZzaW8ydnN3cDFzcSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/MbAKIY1bYnNoo27eWf/giphy.gif'
  }
}

async function generateGifDescription(gifUrl) {
  try {
    const response = await axios.post('http://localhost:11434/api/generate', {
      model: 'llama3',
      prompt: `[INST]–¢–æ–ª—å–∫–æ —Å—Ç—Ä–æ–≥–æ –≤ —ç—Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:
–°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë–∏–±–∏–∑—è–Ω-—Ç–∏–ø** ‚Äî –æ–ø–∏—Å–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏
–ì–¥–µ: 
- —Ç–∏–ø=1 —Ä—É—Å—Å–∫–æ–µ —Å–ª–æ–≤–æ
- –æ–ø–∏—Å–∞–Ω–∏–µ=6-8 —Ä—É—Å—Å–∫–∏—Ö —Å–ª–æ–≤
- 1 —ç–º–æ–¥–∑–∏ –≤ –∫–æ–Ω—Ü–µ
–ü—Ä–∏–º–µ—Ä: "–°–µ–≥–æ–¥–Ω—è —Ç—ã: **–ë–∏–±–∏–∑—è–Ω-—Å–æ–Ω—è** ‚Äî —É–∂–µ –ø—è—Ç—ã–π —Ä–∞–∑ –ø–µ—Ä–µ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—à—å —ç—Ç—É –≥–∏—Ñ–∫—É üí§"
–î–ª—è –≥–∏—Ñ–∫–∏: ${gifUrl}[/INST]`,
      stream: false,
      options: {
        temperature: 0.9,
        max_tokens: 150,
        top_p: 0.9,
        frequency_penalty: 0.5,
        presence_penalty: 0.5,
        stop: ['\n']
      }
    });

    let result = response.data.response.trim();

    if (!result.startsWith('–°–µ–≥–æ–¥–Ω—è —Ç—ã:')) {
      throw new Error(`–§–æ—Ä–º–∞—Ç –Ω–∞—Ä—É—à–µ–Ω: ${result}`);
    }

    return result;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞:', error.message);
    return randomizer(FUNNY_DESCRIPTIONS);
  }
}

module.exports = {
  getRandomMonkeyGif
}